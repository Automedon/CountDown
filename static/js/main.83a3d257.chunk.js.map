{"version":3,"sources":["helpers/solve.js","components/MainNumber.tsx","redux/actions/numberActions.ts","redux/types.ts","components/Numbers.tsx","components/Step1.tsx","components/Step2.tsx","components/SelectNumbers.tsx","App.tsx","serviceWorker.ts","helpers/generate100-1000.ts","helpers/generate0-10.ts","redux/reducers/numberReducer.ts","redux/reducers/index.ts","store.ts","index.tsx"],"names":["Expr","BinExpr","op","this","Add","Sub","Mul","Div","Val","isNormalizedAdd","left","right","ro","lo","value","isNormalizedSub","isNormalizedMul","isNormalizedDiv","make","a","b","generation","addExpr","avalue","bvalue","init","make_half","prototype","toStringUnder","precedence","toString","initBinExpr","used","id","toId","p","index","String","module","exports","solutions","target","numbers","numcnt","length","full_usage","segments","Array","i","arr","exprs","has_single_number_solution","num","expr","push","uniq_solutions","lower","upper","prev_generation","bexpr","bused","aused","segment","aexpr","Wrapper","styled","section","connector","connect","state","numberReducer","props","mainNumber","showMainNumber","renderNumber","className","split","map","n","key","Math","random","AddNumber","type","payload","clicked","StartTimer","StartGame","StopGame","mapDispatch","BackNumber","renderNumbers","onClick","randomNumbers","randomBigNumbers","renderRandomNumbers","renderRandomBigNumbers","every","v","TextArea","Input","PlayAgain","OnChange","text","step3","textArr","dtext","textArea","coincidence","style","color","rows","placeholder","onChange","e","disabled","buttons","ChangeTypeOfSeconds","seconds","gameStarted","step1","step2","useEffect","timer","setInterval","clearInterval","percent","format","strokeColor","App","href","Boolean","window","location","hostname","match","getRandomInt1000","min","max","ceil","floor","getRandomInt","sol","require","generateRandomNumbers","from","generateRandomBigNumbers","InitialStateNumberReducer","typeOfSeconds","rootReducer","combineReducers","action","slice","val","some","x","replace","createStore","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.83a3d257.chunk.js","sourcesContent":["function Expr() {}\r\n\r\nExpr.prototype = {\r\n  toStringUnder: function(precedence) {\r\n    if (precedence > this.precedence) {\r\n      return \"(\" + this.toString() + \")\";\r\n    } else {\r\n      return this.toString();\r\n    }\r\n  }\r\n};\r\n\r\nfunction BinExpr(op) {\r\n  this.op = op;\r\n}\r\n\r\nBinExpr.prototype = new Expr();\r\n\r\nBinExpr.prototype.initBinExpr = function(left, right, value, generation) {\r\n  this.left = left;\r\n  this.right = right;\r\n  this.value = value;\r\n  this.used = left.used | right.used;\r\n  this.id = this.toId();\r\n  this.generation = generation;\r\n  return this;\r\n};\r\n\r\nBinExpr.prototype.toString = function() {\r\n  let p = this.precedence;\r\n  return (\r\n    this.left.toStringUnder(p) +\r\n    \" \" +\r\n    this.op +\r\n    \" \" +\r\n    this.right.toStringUnder(p)\r\n  );\r\n};\r\n\r\nBinExpr.prototype.toId = function() {\r\n  return \"(\" + this.left.toId() + this.op + this.right.toId() + \")\";\r\n};\r\n\r\nfunction Add() {}\r\n\r\nAdd.prototype = new BinExpr(\"+\");\r\n\r\nAdd.prototype.precedence = 0;\r\n\r\nAdd.prototype.init = function(left, right, generation) {\r\n  return this.initBinExpr(left, right, left.value + right.value, generation);\r\n};\r\n\r\nfunction Sub() {}\r\n\r\nSub.prototype = new BinExpr(\"-\");\r\n\r\nSub.prototype.precedence = 1;\r\n\r\nSub.prototype.init = function(left, right, generation) {\r\n  return this.initBinExpr(left, right, left.value - right.value, generation);\r\n};\r\n\r\nfunction Mul() {}\r\n\r\nMul.prototype = new BinExpr(\"*\");\r\n\r\nMul.prototype.precedence = 3;\r\n\r\nMul.prototype.init = function(left, right, generation) {\r\n  return this.initBinExpr(left, right, left.value * right.value, generation);\r\n};\r\n\r\nfunction Div() {}\r\n\r\nDiv.prototype = new BinExpr(\"/\");\r\n\r\nDiv.prototype.precedence = 2;\r\n\r\nDiv.prototype.init = function(left, right, generation) {\r\n  return this.initBinExpr(left, right, left.value / right.value, generation);\r\n};\r\n\r\nfunction Val() {}\r\n\r\nVal.prototype = new Expr();\r\n\r\nVal.prototype.op = \"$\";\r\nVal.prototype.precedence = 4;\r\n\r\nVal.prototype.init = function(value, index, generation) {\r\n  this.value = value;\r\n  this.index = index;\r\n  this.used = 1 << index;\r\n  this.id = this.toId();\r\n  this.generation = generation;\r\n  return this;\r\n};\r\n\r\nVal.prototype.toString = function() {\r\n  return String(this.value);\r\n};\r\n\r\nVal.prototype.toId = Val.prototype.toStringUnder = Val.prototype.toString;\r\n\r\nfunction isNormalizedAdd(left, right) {\r\n  let ro = right.op;\r\n  if (ro === \"+\" || ro === \"-\") {\r\n    return false;\r\n  }\r\n\r\n  let lo = left.op;\r\n  if (lo === \"+\") {\r\n    return left.right.value <= right.value;\r\n  } else if (lo === \"-\") {\r\n    return false;\r\n  } else {\r\n    return left.value <= right.value;\r\n  }\r\n}\r\n\r\nfunction isNormalizedSub(left, right) {\r\n  let ro = right.op;\r\n  if (ro === \"+\" || ro === \"-\") {\r\n    return false;\r\n  }\r\n\r\n  let lo = left.op;\r\n  if (lo === \"-\") {\r\n    return left.right.value <= right.value;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction isNormalizedMul(left, right) {\r\n  let ro = right.op;\r\n  if (ro === \"*\" || ro === \"/\") {\r\n    return false;\r\n  }\r\n\r\n  let lo = left.op;\r\n  if (lo === \"*\") {\r\n    return left.right.value <= right.value;\r\n  } else if (lo === \"/\") {\r\n    return false;\r\n  } else {\r\n    return left.value <= right.value;\r\n  }\r\n}\r\n\r\nfunction isNormalizedDiv(left, right) {\r\n  let ro = right.op;\r\n  if (ro === \"*\" || ro === \"/\") {\r\n    return false;\r\n  }\r\n\r\n  let lo = left.op;\r\n  if (lo === \"/\") {\r\n    return left.right.value <= right.value;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction make(a, b, generation, addExpr) {\r\n  let avalue = a.value;\r\n  let bvalue = b.value;\r\n\r\n  if (isNormalizedAdd(a, b)) {\r\n    addExpr(new Add().init(a, b, generation));\r\n  } else if (isNormalizedAdd(b, a)) {\r\n    addExpr(new Add().init(b, a, generation));\r\n  }\r\n\r\n  if (avalue !== 1 && bvalue !== 1) {\r\n    if (isNormalizedMul(a, b)) {\r\n      addExpr(new Mul().init(a, b, generation));\r\n    } else if (isNormalizedMul(b, a)) {\r\n      addExpr(new Mul().init(b, a, generation));\r\n    }\r\n  }\r\n\r\n  if (avalue > bvalue) {\r\n    if (avalue - bvalue !== bvalue && isNormalizedSub(a, b)) {\r\n      addExpr(new Sub().init(a, b, generation));\r\n    }\r\n\r\n    if (\r\n      bvalue !== 1 &&\r\n      avalue % bvalue === 0 &&\r\n      avalue / bvalue !== bvalue &&\r\n      isNormalizedDiv(a, b)\r\n    ) {\r\n      addExpr(new Div().init(a, b, generation));\r\n    }\r\n  } else if (bvalue > avalue) {\r\n    if (bvalue - avalue !== avalue && isNormalizedSub(b, a)) {\r\n      addExpr(new Sub().init(b, a, generation));\r\n    }\r\n\r\n    if (\r\n      avalue !== 1 &&\r\n      bvalue % avalue === 0 &&\r\n      bvalue / avalue !== avalue &&\r\n      isNormalizedDiv(b, a)\r\n    ) {\r\n      addExpr(new Div().init(b, a, generation));\r\n    }\r\n  } else if (bvalue !== 1) {\r\n    if (isNormalizedDiv(a, b)) {\r\n      addExpr(new Div().init(a, b, generation));\r\n    } else if (isNormalizedDiv(b, a)) {\r\n      addExpr(new Div().init(b, a, generation));\r\n    }\r\n  }\r\n}\r\n\r\nfunction make_half(a, b, generation, addExpr) {\r\n  let avalue = a.value;\r\n  let bvalue = b.value;\r\n\r\n  if (isNormalizedAdd(a, b)) {\r\n    addExpr(new Add().init(a, b, generation));\r\n  }\r\n\r\n  if (avalue !== 1 && bvalue !== 1) {\r\n    if (isNormalizedMul(a, b)) {\r\n      addExpr(new Mul().init(a, b, generation));\r\n    }\r\n  }\r\n\r\n  if (avalue > bvalue) {\r\n    if (avalue - bvalue !== bvalue && isNormalizedSub(a, b)) {\r\n      addExpr(new Sub().init(a, b, generation));\r\n    }\r\n\r\n    if (\r\n      bvalue !== 1 &&\r\n      avalue % bvalue === 0 &&\r\n      avalue / bvalue !== bvalue &&\r\n      isNormalizedDiv(a, b)\r\n    ) {\r\n      addExpr(new Div().init(a, b, generation));\r\n    }\r\n  } else if (avalue === bvalue && bvalue !== 1) {\r\n    if (isNormalizedDiv(a, b)) {\r\n      addExpr(new Div().init(a, b, generation));\r\n    }\r\n  }\r\n}\r\n\r\nfunction solutions(target, numbers, cb = a => a.toString()) {\r\n  let numcnt = numbers.length;\r\n  let full_usage = ~(~0 << numcnt);\r\n  let generation = 0;\r\n  let segments = new Array(full_usage);\r\n  for (let i = 0; i < segments.length; ++i) {\r\n    segments[i] = [];\r\n  }\r\n  let arr = [];\r\n  let exprs = [];\r\n  let has_single_number_solution = false;\r\n  for (let i = 0; i < numbers.length; ++i) {\r\n    let num = numbers[i];\r\n    let expr = new Val().init(num, i, generation);\r\n    if (num === target) {\r\n      if (!has_single_number_solution) {\r\n        has_single_number_solution = true;\r\n        arr.push(expr.toString());\r\n      }\r\n    } else {\r\n      exprs.push(expr);\r\n      segments[expr.used - 1].push(expr);\r\n    }\r\n  }\r\n\r\n  let uniq_solutions = {};\r\n\r\n  function addExpr(expr) {\r\n    if (expr.value === target) {\r\n      if (uniq_solutions[expr.id] !== true) {\r\n        uniq_solutions[expr.id] = true;\r\n        arr.push(expr.toString());\r\n      }\r\n    } else if (expr.used !== full_usage) {\r\n      exprs.push(expr);\r\n      segments[expr.used - 1].push(expr);\r\n    }\r\n  }\r\n\r\n  let lower = 0;\r\n  let upper = numcnt;\r\n  while (lower < upper) {\r\n    let prev_generation = generation++;\r\n    for (let b = lower; b < upper; ++b) {\r\n      let bexpr = exprs[b];\r\n      let bused = bexpr.used;\r\n\r\n      for (let aused = 1; aused <= segments.length; ++aused) {\r\n        if ((bused & aused) === 0) {\r\n          let segment = segments[aused - 1];\r\n          for (let i = 0; i < segment.length; ++i) {\r\n            let aexpr = segment[i];\r\n\r\n            if (aexpr.generation === prev_generation) {\r\n              make_half(aexpr, bexpr, generation, addExpr);\r\n            } else {\r\n              make(aexpr, bexpr, generation, addExpr);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    lower = upper;\r\n    upper = exprs.length;\r\n  }\r\n  return arr;\r\n}\r\n\r\nmodule.exports = { solutions };\r\n","import React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { RootState } from \"../redux/reducers\";\r\nimport { NumberReducerType } from \"../redux/reducers/numberReducer\";\r\n\r\nconst Wrapper = styled.section`\r\n  border: 1px solid #dadada;\r\n  background-color: #dadada;\r\n  border-radius: 5px;\r\n  padding: 20px;\r\n  margin-bottom: 25px;\r\n  div.mainNumber {\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    div {\r\n      height: 82px;\r\n      width: 45px;\r\n      background-color: #273238;\r\n      font-size: 40px;\r\n      font-weight: bold;\r\n      padding: 10px;\r\n      margin: 10px;\r\n      border-radius: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface MapStateProps {\r\n  numberReducer: NumberReducerType;\r\n}\r\n\r\ninterface DispatchProps {}\r\n\r\nconst mapState = (state: RootState): MapStateProps => ({\r\n  numberReducer: state.numberReducer\r\n});\r\n\r\nconst mapDispatch: DispatchProps = {};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst MainNumber: React.ComponentType<Props> = props => {\r\n  const { mainNumber, showMainNumber } = props.numberReducer;\r\n  const renderNumber = (\r\n    <div className=\"mainNumber\">\r\n      {mainNumber\r\n        .toString()\r\n        .split(``)\r\n        .map(n => (\r\n          <div key={Math.random() + n}>{showMainNumber && n}</div>\r\n        ))}\r\n    </div>\r\n  );\r\n  return <Wrapper>{renderNumber}</Wrapper>;\r\n};\r\n\r\nexport default connector(MainNumber);\r\n","import {\r\n  ADD_NUMBER,\r\n  START_TIMER,\r\n  START_GAME,\r\n  STOP_GAME,\r\n  PLAY_AGAIN,\r\n  ON_CHANGE,\r\n  CHANGE_TYPE_OF_SECONDS,\r\n  BACK_NUMBER\r\n} from \"../types\";\r\n\r\nexport type AddNumberActionType = {\r\n  type: typeof ADD_NUMBER;\r\n  payload: {\r\n    id: number;\r\n    value: number;\r\n    clicked: boolean;\r\n  };\r\n};\r\nexport const AddNumber = (id: number, value: number): AddNumberActionType => ({\r\n  type: ADD_NUMBER,\r\n  payload: { id, value, clicked: true }\r\n});\r\nexport type BackNumberActionType = {\r\n  type: typeof BACK_NUMBER;\r\n  payload: {\r\n    id: number;\r\n    value: number;\r\n    clicked: boolean;\r\n  };\r\n};\r\nexport const BackNumber = (id: number, value: number): AddNumberActionType => ({\r\n  type: BACK_NUMBER,\r\n  payload: { id, value, clicked: false }\r\n});\r\n\r\nexport type StartTimerActionType = {\r\n  type: typeof START_TIMER;\r\n  payload: number;\r\n};\r\nexport const StartTimer = (): StartTimerActionType => ({\r\n  type: START_TIMER,\r\n  payload: 1\r\n});\r\nexport type StartGameActionType = {\r\n  type: typeof START_GAME;\r\n};\r\nexport const StartGame = (): StartGameActionType => ({\r\n  type: START_GAME\r\n});\r\nexport type StopGameActionType = {\r\n  type: typeof STOP_GAME;\r\n};\r\nexport const StopGame = (): StopGameActionType => ({\r\n  type: STOP_GAME\r\n});\r\nexport type PlayAgainActionType = {\r\n  type: typeof PLAY_AGAIN;\r\n};\r\nexport const PlayAgain = (): PlayAgainActionType => ({\r\n  type: PLAY_AGAIN\r\n});\r\nexport type OnChangeActionType = {\r\n  type: typeof ON_CHANGE;\r\n  payload: {\r\n    text: string;\r\n  };\r\n};\r\nexport const OnChange = (text: string): OnChangeActionType => ({\r\n  type: ON_CHANGE,\r\n  payload: { text }\r\n});\r\nexport type ChangeTypeOfSecondsActionType = {\r\n  type: typeof CHANGE_TYPE_OF_SECONDS;\r\n};\r\nexport const ChangeTypeOfSeconds = (): ChangeTypeOfSecondsActionType => ({\r\n  type: CHANGE_TYPE_OF_SECONDS\r\n});\r\n","export const ADD_NUMBER: string = \"ADD_NUMBER\";\r\nexport const BACK_NUMBER: string = \"BACK_NUMBER\";\r\nexport const START_TIMER: string = \"START_TIMER\";\r\nexport const START_GAME: string = \"START_GAME\";\r\nexport const STOP_GAME: string = \"STOP_GAME\";\r\nexport const PLAY_AGAIN: string = \"PLAY_AGAIN\";\r\nexport const ON_CHANGE: string = \"ON_CHANGE\";\r\nexport const CHANGE_TYPE_OF_SECONDS: string = \"CHANGE_TYPE_OF_SECONDS\";\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { NumberReducerType } from \"../redux/reducers/numberReducer\";\r\nimport { RootState } from \"../redux/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  BackNumberActionType,\r\n  BackNumber\r\n} from \"../redux/actions/numberActions\";\r\n\r\nconst Wrapper = styled.section`\r\n  width: 80%;\r\n  @media (max-width: 1000px) {\r\n    width: 100%;\r\n  }\r\n  height: 100px;\r\n  border: 1px solid #dadada;\r\n  background-color: #dadada;\r\n  border-radius: 5px;\r\n  div.numbers {\r\n    height: 100%;\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    div {\r\n      margin: 10px;\r\n      width: 90px;\r\n      height: 70px;\r\n      background-color: #6aa839;\r\n      font-size: 40px;\r\n      font-weight: bold;\r\n      padding: 10px;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\ninterface MapStateProps {\r\n  numberReducer: NumberReducerType;\r\n}\r\n\r\ninterface DispatchProps {\r\n  BackNumber: (id: number, value: number) => BackNumberActionType;\r\n}\r\n\r\nconst mapState = (state: RootState): MapStateProps => ({\r\n  numberReducer: state.numberReducer\r\n});\r\n\r\nconst mapDispatch: DispatchProps = {\r\n  BackNumber\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst Numbers: React.FC<Props> = props => {\r\n  const { numbers } = props.numberReducer;\r\n  const { BackNumber } = props;\r\n  const renderNumbers = (\r\n    <div className=\"numbers\">\r\n      {numbers.map(({ value, id }) => (\r\n        <div\r\n          key={id || Math.random()}\r\n          onClick={() => id && value && BackNumber(id, value)}\r\n        >\r\n          {value}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n  return <Wrapper>{renderNumbers}</Wrapper>;\r\n};\r\n\r\nexport default connector(Numbers);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { RootState } from \"../redux/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { NumberReducerType } from \"../redux/reducers/numberReducer\";\r\nimport {\r\n  AddNumber,\r\n  AddNumberActionType,\r\n  StartGame,\r\n  StartTimer,\r\n  StartGameActionType,\r\n  StartTimerActionType\r\n} from \"../redux/actions/numberActions\";\r\n\r\nconst Wrapper = styled.section`\r\n  div.textAndButtons {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: start;\r\n    justify-content: center;\r\n    div.text {\r\n      h4 {\r\n        font-size: 14px;\r\n        font-weight: bold;\r\n        margin: 0;\r\n      }\r\n      h5 {\r\n        font-size: 14px;\r\n        font-weight: normal;\r\n        margin: 0;\r\n      }\r\n    }\r\n    div.randomNumbers {\r\n      width: 500px;\r\n      color: #e6e6e6;\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      text-align: center;\r\n      div {\r\n        width: 40px;\r\n        height: 40px;\r\n        background-color: #c9c9c9;\r\n        font-weight: bold;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n        vert-align: middle;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        margin: 5px;\r\n        color: white;\r\n      }\r\n      div.gray {\r\n        background-color: #b1b1b1;\r\n      }\r\n    }\r\n    div.randomBigNumbers {\r\n      height: 50%;\r\n      color: #e6e6e6;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-evenly;\r\n      align-items: center;\r\n      text-align: center;\r\n      div {\r\n        width: 40px;\r\n        height: 40px;\r\n        background-color: #c9c9c9;\r\n        font-weight: bold;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n        vert-align: middle;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        margin: 5px;\r\n        color: white;\r\n      }\r\n      div.gray {\r\n        background-color: #b1b1b1;\r\n      }\r\n    }\r\n    div.start {\r\n      color: white;\r\n      font-size: 12px;\r\n      margin: 10px;\r\n      text-align: center;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      width: 140px;\r\n      height: 30px;\r\n      cursor: pointer;\r\n      background: #2d3c43;\r\n      background: linear-gradient(\r\n        180deg,\r\n        rgba(40, 68, 75, 1) 0%,\r\n        rgba(45, 60, 67, 1) 50%,\r\n        rgba(36, 45, 55, 1) 100%\r\n      );\r\n    }\r\n    div.disabled {\r\n      opacity: 0.3;\r\n      pointer-events: none;\r\n    }\r\n  }\r\n`;\r\ninterface MapStateProps {\r\n  numberReducer: NumberReducerType;\r\n}\r\n\r\ninterface DispatchProps {\r\n  AddNumber: (id: number, value: number) => AddNumberActionType;\r\n  StartGame: () => StartGameActionType;\r\n  StartTimer: () => StartTimerActionType;\r\n}\r\n\r\nconst mapState = (state: RootState): MapStateProps => ({\r\n  numberReducer: state.numberReducer\r\n});\r\n\r\nconst mapDispatch: DispatchProps = {\r\n  AddNumber,\r\n  StartGame,\r\n  StartTimer\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst Step1: React.FC<Props> = props => {\r\n  const { randomNumbers, randomBigNumbers, numbers } = props.numberReducer;\r\n  const { AddNumber, StartGame } = props;\r\n\r\n  const renderRandomNumbers = (\r\n    <div className=\"randomNumbers gray\">\r\n      {randomNumbers.map(({ value, clicked, id }) =>\r\n        clicked ? (\r\n          <div key={Math.random()} className=\"gray\">\r\n            <i className=\"fas fa-check\" />\r\n          </div>\r\n        ) : (\r\n          <div key={Math.random()} onClick={() => AddNumber(id, value)}>\r\n            <span>{value}</span>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n  const renderRandomBigNumbers = (\r\n    <div className=\"randomBigNumbers\">\r\n      {randomBigNumbers.map(({ value, clicked, id }) =>\r\n        clicked ? (\r\n          <div key={Math.random()} className=\"gray\">\r\n            <i className=\"fas fa-check\" />\r\n          </div>\r\n        ) : (\r\n          <div key={Math.random()} onClick={() => AddNumber(id, value)}>\r\n            <span>{value}</span>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"textAndButtons\">\r\n        <div className=\"text\">\r\n          <h4>Select 6 numbers by clicking on the cards below.</h4>\r\n          <h5>\r\n            The first two rows contain the numbers 1 to 10, the last row\r\n            containt the nymbers 25, 50, 75 and 100.\r\n          </h5>\r\n        </div>\r\n        {renderRandomNumbers}\r\n        {renderRandomBigNumbers}\r\n        <div\r\n          className={`start ${\r\n            numbers.every(v => v.value !== null) ? \"\" : \"disabled\"\r\n          }`}\r\n          onClick={() => StartGame()}\r\n        >\r\n          START\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default connector(Step1);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NumberReducerType } from \"../redux/reducers/numberReducer\";\r\nimport {\r\n  AddNumber,\r\n  AddNumberActionType,\r\n  StartGame,\r\n  StopGame,\r\n  PlayAgain,\r\n  StartGameActionType,\r\n  StartTimer,\r\n  StartTimerActionType,\r\n  StopGameActionType,\r\n  PlayAgainActionType,\r\n  OnChange,\r\n  OnChangeActionType\r\n} from \"../redux/actions/numberActions\";\r\nimport { RootState } from \"../redux/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Input } from \"antd\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst Wrapper = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: stretch;\r\n  align-items: center;\r\n\r\n  div.text {\r\n    padding: 10px 0;\r\n    align-self: flex-start;\r\n    h4 {\r\n      margin: 0;\r\n      font-weight: normal;\r\n      span {\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n  div.textAreas {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    padding-right: 20px;\r\n    margin: 0;\r\n\r\n    textarea {\r\n      height: 100px;\r\n      resize: none;\r\n      border-radius: 5px;\r\n      margin: 0 !important;\r\n      max-width: 50%;\r\n    }\r\n    div.solutions {\r\n      max-width: 50%;\r\n      background-color: white;\r\n      min-width: 50%;\r\n      height: 100px;\r\n      max-height: available;\r\n      overflow-y: auto;\r\n      margin-left: 2px;\r\n      border-radius: 5px;\r\n      p {\r\n        margin: 0;\r\n      }\r\n    }\r\n  }\r\n  div.stop {\r\n    align-self: flex-start;\r\n    color: white;\r\n    font-size: 12px;\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 140px;\r\n    height: 30px;\r\n    cursor: pointer;\r\n    background: #2d3c43;\r\n    margin: 10px;\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(40, 68, 75, 1) 0%,\r\n      rgba(45, 60, 67, 1) 50%,\r\n      rgba(36, 45, 55, 1) 100%\r\n    );\r\n  }\r\n`;\r\n\r\ninterface MapStateProps {\r\n  numberReducer: NumberReducerType;\r\n}\r\n\r\ninterface DispatchProps {\r\n  AddNumber: (id: number, value: number) => AddNumberActionType;\r\n  StartGame: () => StartGameActionType;\r\n  StartTimer: () => StartTimerActionType;\r\n  StopGame: () => StopGameActionType;\r\n  PlayAgain: () => PlayAgainActionType;\r\n  OnChange: (text: string) => OnChangeActionType;\r\n}\r\n\r\nconst mapState = (state: RootState): MapStateProps => ({\r\n  numberReducer: state.numberReducer\r\n});\r\n\r\nconst mapDispatch: DispatchProps = {\r\n  AddNumber,\r\n  StartGame,\r\n  StartTimer,\r\n  StopGame,\r\n  PlayAgain,\r\n  OnChange\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst Step2: React.FC<Props> = props => {\r\n  const { step3, solutions, textArr } = props.numberReducer;\r\n  const { StopGame, PlayAgain, OnChange } = props;\r\n  const dtext = !step3 ? (\r\n    <div className=\"text\">\r\n      <h4>\r\n        Combine six selected numbers{\" \"}\r\n        <span>(using just the four basic arithmetic operators)</span>\r\n      </h4>\r\n      <h4>to get as close as possible to a randomly generated total.</h4>\r\n    </div>\r\n  ) : (\r\n    <div className=\"text\">\r\n      <h4>SEARCH FINISHED:</h4>\r\n      <h4>{`${solutions.length}`} answers found</h4>\r\n    </div>\r\n  );\r\n  const textArea = !step3 ? (\r\n    <div className=\"textAreas\">\r\n      <TextArea\r\n        rows={4}\r\n        placeholder={\r\n          \"Optional working space. Use paper if you prefer. \" +\r\n          \"\\n\" +\r\n          \"Example: 3 * (4 + 7 * (6 * 8 - 3))\"\r\n        }\r\n        onChange={e => OnChange(e.target.value)}\r\n      />\r\n      <TextArea\r\n        rows={4}\r\n        placeholder={`Here you will see the answers after you press \"STOP\"`}\r\n        disabled={true}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <div className=\"textAreas\">\r\n      <div className=\"solutions\">\r\n        {textArr.map(({ text, coincidence }) => {\r\n          return (\r\n            <p\r\n              key={text + Math.random()}\r\n              style={{ color: coincidence ? \"green\" : \"black\" }}\r\n            >\r\n              {text}\r\n            </p>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"solutions\">\r\n        {solutions.map(({ value, coincidence }) => (\r\n          <p\r\n            key={value + Math.random()}\r\n            style={{ color: coincidence ? \"green\" : \"red\" }}\r\n          >\r\n            {value}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n  const buttons = !step3 ? (\r\n    <div className=\"stop\" onClick={() => StopGame()}>\r\n      STOP\r\n    </div>\r\n  ) : (\r\n    <div className=\"stop\" onClick={() => PlayAgain()}>\r\n      PLAY AGAIN\r\n    </div>\r\n  );\r\n  return (\r\n    <Wrapper>\r\n      {dtext}\r\n      {textArea}\r\n      {buttons}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default connector(Step2);\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { RootState } from \"../redux/reducers\";\r\nimport { Progress } from \"antd\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { NumberReducerType } from \"../redux/reducers/numberReducer\";\r\nimport {\r\n  AddNumber,\r\n  AddNumberActionType,\r\n  StartGame,\r\n  StartTimer,\r\n  StartGameActionType,\r\n  StartTimerActionType,\r\n  ChangeTypeOfSeconds,\r\n  ChangeTypeOfSecondsActionType,\r\n  StopGame,\r\n  StopGameActionType\r\n} from \"../redux/actions/numberActions\";\r\nimport Step1 from \"./Step1\";\r\nimport Step2 from \"./Step2\";\r\n\r\nconst Wrapper = styled.section`\r\n  width: 80%;\r\n  @media (max-width: 1000px) {\r\n    width: 100%;\r\n  }\r\n  border: 1px solid #dadada;\r\n  background-color: #dadada;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  div.progress {\r\n    width: 25%;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    * {\r\n      color: #6ab035;\r\n    }\r\n  }\r\n  div.steps {\r\n    width: 75%;\r\n  }\r\n`;\r\ninterface MapStateProps {\r\n  numberReducer: NumberReducerType;\r\n}\r\n\r\ninterface DispatchProps {\r\n  AddNumber: (id: number, value: number) => AddNumberActionType;\r\n  StartGame: () => StartGameActionType;\r\n  StartTimer: () => StartTimerActionType;\r\n  ChangeTypeOfSeconds: () => ChangeTypeOfSecondsActionType;\r\n  StopGame: () => StopGameActionType;\r\n}\r\n\r\nconst mapState = (state: RootState): MapStateProps => ({\r\n  numberReducer: state.numberReducer\r\n});\r\n\r\nconst mapDispatch: DispatchProps = {\r\n  AddNumber,\r\n  StartGame,\r\n  StartTimer,\r\n  ChangeTypeOfSeconds,\r\n  StopGame\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst SelectNumbers: React.FC<Props> = props => {\r\n  const { seconds, gameStarted, step1, step2 } = props.numberReducer;\r\n  const { StartTimer, ChangeTypeOfSeconds, StopGame } = props;\r\n\r\n  useEffect(() => {\r\n    let timer: number;\r\n    if (gameStarted) {\r\n      timer = setInterval(() => StartTimer(), 1000);\r\n    }\r\n\r\n    return function cleanup() {\r\n      clearInterval(timer);\r\n    };\r\n  }, [gameStarted]);\r\n  if (seconds === 0) {\r\n    StopGame();\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"progress\" onClick={() => ChangeTypeOfSeconds()}>\r\n        <Progress\r\n          type=\"circle\"\r\n          percent={100 - seconds * 1.67}\r\n          format={() => seconds + \" sec\"}\r\n          strokeColor={\"#6AB035\"}\r\n        />\r\n      </div>\r\n      <div className=\"steps\">\r\n        {step1 && <Step1 />}\r\n        {step2 && <Step2 />}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default connector(SelectNumbers);\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport MainNumber from \"./components/MainNumber\";\nimport Numbers from \"./components/Numbers\";\nimport SelectNumbers from \"./components/SelectNumbers\";\n\nconst Wrapper = styled.section`\n  background-color: #e7e7e7;\n  width: 100%;\n  height: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n`;\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <Wrapper>\n      <h1>\n        Created by <a href=\"https://github.com/Automedon\">Automedon</a>\n      </h1>\n      <MainNumber />\n      <Numbers />\n      <SelectNumbers />\n    </Wrapper>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default function getRandomInt1000(\r\n  min: number = 100,\r\n  max: number = 1000\r\n): number {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n","export default function getRandomInt(\r\n  min: number = 1,\r\n  max: number = 10\r\n): number {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n","import {\r\n  ADD_NUMBER,\r\n  BACK_NUMBER,\r\n  CHANGE_TYPE_OF_SECONDS,\r\n  ON_CHANGE,\r\n  PLAY_AGAIN,\r\n  START_GAME,\r\n  START_TIMER,\r\n  STOP_GAME\r\n} from \"../types\";\r\nimport getRandomInt1000 from \"../../helpers/generate100-1000\";\r\nimport getRandomInt from \"../../helpers/generate0-10\";\r\nimport {\r\n  AddNumberActionType,\r\n  OnChangeActionType\r\n} from \"../actions/numberActions\";\r\nconst sol = require(\"../../helpers/solve.js\").solutions;\r\n\r\nexport type NumberReducerType = {\r\n  numbers: Array<{\r\n    value: number | null;\r\n    id: number | null;\r\n  }>;\r\n  mainNumber: number;\r\n  randomNumbers: Array<{\r\n    value: number;\r\n    clicked: boolean;\r\n    id: number;\r\n  }>;\r\n  readonly randomBigNumbers: Array<{\r\n    value: number;\r\n    clicked: boolean;\r\n    id: number;\r\n  }>;\r\n  seconds: number;\r\n  showMainNumber: boolean;\r\n  gameStarted: boolean;\r\n  step1: boolean;\r\n  step2: boolean;\r\n  step3: boolean;\r\n  solutions: Array<{\r\n    value: string;\r\n    coincidence: boolean;\r\n  }>;\r\n  text: string;\r\n  typeOfSeconds: number[];\r\n  i: number;\r\n  textArr: Array<{\r\n    text: string;\r\n    coincidence: boolean;\r\n  }>;\r\n};\r\n\r\nconst generateRandomNumbers = () =>\r\n  Array.from({ length: 20 }, () => {\r\n    return { value: getRandomInt(), clicked: false, id: Math.random() };\r\n  });\r\nconst generateRandomBigNumbers = () => [\r\n  { value: 25, clicked: false, id: Math.random() },\r\n  { value: 50, clicked: false, id: Math.random() },\r\n  { value: 75, clicked: false, id: Math.random() },\r\n  { value: 100, clicked: false, id: Math.random() }\r\n];\r\nconst InitialStateNumberReducer: NumberReducerType = {\r\n  numbers: [\r\n    { value: null, id: null },\r\n    { value: null, id: null },\r\n    { value: null, id: null },\r\n    { value: null, id: null },\r\n    { value: null, id: null },\r\n    { value: null, id: null }\r\n  ],\r\n  mainNumber: getRandomInt1000(),\r\n  randomNumbers: generateRandomNumbers(),\r\n  randomBigNumbers: generateRandomBigNumbers(),\r\n  seconds: 30,\r\n  showMainNumber: false,\r\n  gameStarted: false,\r\n  step1: true,\r\n  step2: false,\r\n  step3: false,\r\n  solutions: [],\r\n  text: \"\",\r\n  typeOfSeconds: [15, 30, 45, 60],\r\n  i: 0,\r\n  textArr: []\r\n};\r\n\r\nexport default (\r\n  state = InitialStateNumberReducer,\r\n  action: AddNumberActionType & OnChangeActionType\r\n): NumberReducerType => {\r\n  switch (action.type) {\r\n    case ADD_NUMBER: {\r\n      const id = action.payload.id;\r\n      const value = action.payload.value;\r\n      const clicked = action.payload.clicked;\r\n      if (state.numbers.every(v => v.value !== null)) {\r\n        return state;\r\n      }\r\n      let arr = state.numbers.slice();\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i].value === null) {\r\n          arr[i] = { value, id };\r\n          break;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        numbers: arr,\r\n        randomNumbers: state.randomNumbers.map(val =>\r\n          val.id === id ? { id, value, clicked } : val\r\n        ),\r\n        randomBigNumbers: state.randomBigNumbers.map(val =>\r\n          val.id === id ? { id, value, clicked } : val\r\n        )\r\n      };\r\n    }\r\n    case BACK_NUMBER: {\r\n      const id = action.payload.id;\r\n      const clicked = action.payload.clicked;\r\n      return {\r\n        ...state,\r\n        numbers: state.numbers.map(v =>\r\n          v.id === id ? { value: null, id: null } : { ...v }\r\n        ),\r\n        randomNumbers: state.randomNumbers.map(val =>\r\n          val.id === id ? { ...val, clicked } : val\r\n        ),\r\n        randomBigNumbers: state.randomBigNumbers.map(val =>\r\n          val.id === id ? { ...val, clicked } : val\r\n        )\r\n      };\r\n    }\r\n    case START_TIMER: {\r\n      if (state.seconds === 0 || !state.gameStarted) return { ...state };\r\n      return { ...state, seconds: state.seconds -= 1 };\r\n    }\r\n    case START_GAME: {\r\n      if (state.numbers.some(v => v.value === null)) return state;\r\n      return {\r\n        ...state,\r\n        showMainNumber: true,\r\n        gameStarted: true,\r\n        step1: false,\r\n        step2: true\r\n      };\r\n    }\r\n    case STOP_GAME: {\r\n      let solutions: Array<{\r\n        value: string;\r\n        coincidence: boolean;\r\n      }> = sol(\r\n        state.mainNumber,\r\n        state.numbers.map(v => v.value)\r\n      ).map((v: string) => ({\r\n        value: v,\r\n        coincidence: false\r\n      }));\r\n      const textArr = state.text.split(`\\n`).map(x => ({\r\n        text: x,\r\n        coincidence: solutions.some(\r\n          v => v.value.replace(/\\s/g, \"\") === x.replace(/\\s/g, \"\")\r\n        )\r\n      }));\r\n      return {\r\n        ...state,\r\n        showMainNumber: true,\r\n        gameStarted: false,\r\n        step1: false,\r\n        step3: true,\r\n        solutions: solutions.map(x => ({\r\n          ...x,\r\n          coincidence: textArr.some(\r\n            v => v.text.replace(/\\s/g, \"\") === x.value.replace(/\\s/g, \"\")\r\n          )\r\n        })),\r\n        seconds:\r\n          state.seconds !== 0\r\n            ? state.seconds\r\n            : state.typeOfSeconds[state.i % state.typeOfSeconds.length],\r\n        textArr\r\n      };\r\n    }\r\n    case ON_CHANGE: {\r\n      return {\r\n        ...state,\r\n        text: action.payload.text\r\n      };\r\n    }\r\n    case CHANGE_TYPE_OF_SECONDS: {\r\n      if (state.gameStarted) return state;\r\n      return {\r\n        ...state,\r\n        i: state.i += 1,\r\n        seconds: state.typeOfSeconds[state.i % state.typeOfSeconds.length]\r\n      };\r\n    }\r\n    case PLAY_AGAIN: {\r\n      return {\r\n        ...state,\r\n        showMainNumber: false,\r\n        gameStarted: false,\r\n        step1: true,\r\n        step2: false,\r\n        step3: false,\r\n        randomNumbers: generateRandomNumbers(),\r\n        randomBigNumbers: generateRandomBigNumbers(),\r\n        seconds: state.typeOfSeconds[state.i % state.typeOfSeconds.length],\r\n        text: \"\",\r\n        textArr: [],\r\n        solutions: [],\r\n        numbers: [\r\n          { value: null, id: null },\r\n          { value: null, id: null },\r\n          { value: null, id: null },\r\n          { value: null, id: null },\r\n          { value: null, id: null },\r\n          { value: null, id: null }\r\n        ],\r\n        mainNumber: getRandomInt1000()\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport numberReducer from \"./numberReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  numberReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"./redux/reducers\";\r\n\r\nexport default createStore(rootReducer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}